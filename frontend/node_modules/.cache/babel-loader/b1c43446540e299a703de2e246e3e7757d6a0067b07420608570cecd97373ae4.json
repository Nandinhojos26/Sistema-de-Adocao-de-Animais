{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fernando\\\\Desktop\\\\Adocao\\\\frontend\\\\src\\\\context\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext } from \"react\";\n\n// Importa o hook personalizado que lida com autenticação\nimport useAuth from \"../hooks/useAuth\";\n\n// Cria um contexto para compartilhar dados entre componentes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/createContext();\n\n// Componente responsável por fornecer os dados do usuário para toda a aplicação\nfunction UserProvider({\n  children\n}) {\n  _s();\n  // Pega do hook useAuth os dados e funções de autenticação\n  const {\n    authenticated,\n    loading,\n    register,\n    login,\n    logout\n  } = useAuth();\n  return (\n    /*#__PURE__*/\n    // Context.Provider compartilha os valores abaixo com todos os componentes que usam o contexto\n    _jsxDEV(Context.Provider, {\n      value: {\n        loading,\n        authenticated,\n        register,\n        login,\n        logout\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n// Exporta o Context para ser usado com useContext\n// e o UserProvider para envolver a aplicação\n_s(UserProvider, \"IEJaPJb8y0hFKhStogUkoNJI3nU=\", false, function () {\n  return [useAuth];\n});\n_c = UserProvider;\nexport { Context, UserProvider };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useAuth","jsxDEV","_jsxDEV","Context","UserProvider","children","_s","authenticated","loading","register","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Fernando/Desktop/Adocao/frontend/src/context/UserContext.js"],"sourcesContent":["import React, { createContext } from \"react\";\r\n\r\n// Importa o hook personalizado que lida com autenticação\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\n// Cria um contexto para compartilhar dados entre componentes\r\nconst Context = createContext();\r\n\r\n// Componente responsável por fornecer os dados do usuário para toda a aplicação\r\nfunction UserProvider({ children }) {\r\n  // Pega do hook useAuth os dados e funções de autenticação\r\n  const { authenticated, loading, register, login, logout } = useAuth();\r\n\r\n  return (\r\n    // Context.Provider compartilha os valores abaixo com todos os componentes que usam o contexto\r\n    <Context.Provider\r\n      value={{ loading, authenticated, register, login, logout }}\r\n    >\r\n      {/* Renderiza todos os filhos que estarão dentro do UserProvider */}\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\n// Exporta o Context para ser usado com useContext\r\n// e o UserProvider para envolver a aplicação\r\nexport { Context, UserProvider };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;;AAE5C;AACA,OAAOC,OAAO,MAAM,kBAAkB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,gBAAGJ,aAAa,CAAC,CAAC;;AAE/B;AACA,SAASK,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAClC;EACA,MAAM;IAAEC,aAAa;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGX,OAAO,CAAC,CAAC;EAErE;IAAA;IACE;IACAE,OAAA,CAACC,OAAO,CAACS,QAAQ;MACfC,KAAK,EAAE;QAAEL,OAAO;QAAED,aAAa;QAAEE,QAAQ;QAAEC,KAAK;QAAEC;MAAO,CAAE;MAAAN,QAAA,EAG1DA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;AAEvB;;AAEA;AACA;AAAAX,EAAA,CAhBSF,YAAY;EAAA,QAEyCJ,OAAO;AAAA;AAAAkB,EAAA,GAF5Dd,YAAY;AAiBrB,SAASD,OAAO,EAAEC,YAAY;AAAG,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}